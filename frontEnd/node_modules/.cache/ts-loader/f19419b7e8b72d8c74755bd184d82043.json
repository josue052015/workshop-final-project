{"remainingRequest":"F:\\workshop-final-project\\workshop-final-project\\frontEnd\\node_modules\\babel-loader\\lib\\index.js!F:\\workshop-final-project\\workshop-final-project\\frontEnd\\node_modules\\ts-loader\\index.js??ref--13-2!F:\\workshop-final-project\\workshop-final-project\\frontEnd\\src\\core\\services\\base.service.ts","dependencies":[{"path":"F:\\workshop-final-project\\workshop-final-project\\frontEnd\\src\\core\\services\\base.service.ts","mtime":1629085164763},{"path":"F:\\workshop-final-project\\workshop-final-project\\frontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workshop-final-project\\workshop-final-project\\frontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\workshop-final-project\\workshop-final-project\\frontEnd\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:\\workshop-final-project\\workshop-final-project\\frontEnd\\src\\core\\services\\base.service.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport settings from \"@/core/utils/app-settings\";\r\nimport { IODataResult, ODataQuery, IODataQuery, IApiQueryResult } from \"../infraestructure/odata\";\r\nimport { IEntityOperationResult } from \"../infraestructure/abstract\";\r\n\r\nexport interface IBaseService<T>{\r\n    odata(action?:string,queryOption?: IODataQuery): Promise<AxiosResponse<IODataResult<T>>>;\r\n    getAll(action:string,queryOption?: IODataQuery): Promise<AxiosResponse<IApiQueryResult<T>>>;\r\n    getById(id: string | number): Promise<AxiosResponse<T>>;\r\n    delete(id: string | number): Promise<AxiosResponse<IEntityOperationResult<T>>>\r\n    post(data: T): Promise<AxiosResponse<IEntityOperationResult<T>>>;\r\n    put(id: string | number, data: T): Promise<AxiosResponse<IEntityOperationResult<T>>>\r\n}\r\nexport class BaseService<T> implements IBaseService<T> {\r\n    public apiUrl: string;\r\n    public odataUrl: string;\r\n    public controller: string;\r\n    constructor(controller: string) {\r\n        this.controller = controller;\r\n        this.apiUrl = settings.API_URL + \"api/\" + controller + \"/\";\r\n        this.odataUrl = settings.API_URL + \"odata/\" + controller + \"/\";\r\n    }\r\n\r\n    public setODataQuery(odataQuery?:  IODataQuery) {\r\n        odataQuery = odataQuery || new ODataQuery();\r\n        if(!odataQuery.$skip)delete odataQuery.$skip;\r\n        if (!odataQuery.$filter) delete odataQuery.$filter;\r\n        if (!odataQuery.$expand) delete odataQuery.$expand;\r\n        if (!odataQuery.$select) delete odataQuery.$select;\r\n        return odataQuery;\r\n    }\r\n\r\n    public async odata(action = '',queryOption?: ODataQuery){\r\n        const params = this.setODataQuery(queryOption);\r\n        const url = action ? `${this.odataUrl}${action}`:this.odataUrl;\r\n        const response = await axios.get<IODataResult<T>>(url, { params });\r\n        return response;\r\n    }\r\n\r\n    public async getAll(action = '',queryOption?: ODataQuery) {\r\n        const params = this.setODataQuery(queryOption);\r\n        const url = action ? `${this.apiUrl}${action}`:`${this.apiUrl}query`;\r\n        const response = await axios.get<IApiQueryResult<T>>(url, { params });\r\n        return response;\r\n    }\r\n\r\n    public async getById(id: string | number){\r\n        const response = await axios.get<T>(this.apiUrl + id);\r\n        return response;\r\n    }\r\n\r\n    public async delete(id: string | number){\r\n        const response = await axios.delete<IEntityOperationResult<T>>(this.apiUrl + id);\r\n        return response;\r\n    }\r\n\r\n    public async post(data: T) {\r\n        const response = await axios.post<IEntityOperationResult<T>>(this.apiUrl, data);\r\n        return response;\r\n    }\r\n\r\n    public async put(id: string | number, data: T){\r\n        const response = await axios.put<IEntityOperationResult<T>>(this.apiUrl + id, data);\r\n        return response;\r\n    }\r\n}\r\n"],"sourceRoot":""}]}